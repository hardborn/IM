<UserControl x:Class="Nova.NovaWeb.McGo.Platform.View.PublishManageView"
                     xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                     xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                     xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
                     xmlns:bc="BetterWpfControls"
                     xmlns:control="clr-namespace:Nova.NovaWeb.McGo.Platform.Control"
                     xmlns:viewModel="clr-namespace:Nova.NovaWeb.McGo.Platform.ViewModel"
                     xmlns:lCommand="clr-namespace:GalaSoft.MvvmLight.Command;assembly=GalaSoft.MvvmLight.Extras.WPF4">
    
    <UserControl.Resources>
        <ContextMenu x:Key="EmergencyTerminalColumnHeaderMenu" DataContext="{Binding TerminalCollection, Source ={x:Static viewModel:ViewModelLocator.Instance}}">
            <MenuItem Header="{DynamicResource ManangementCenter_UI_Grouping}"
                      Command="{Binding GroupColumnCommand}"
                      CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type DataGridColumnHeader}}}"/>
            <MenuItem Header="{DynamicResource ManangementCenter_UI_ClearGroups}"
                      Command="{Binding UnGroupColumnCommand}"/>
            <MenuItem Header="{DynamicResource ManangementCenter_UI_ExpandAllGroups}"
                      Command="{Binding ExpandAllGroupsCommand}"/>
            <MenuItem Header="{DynamicResource ManangementCenter_UI_CollapseAllGroups}"
                      Command="{Binding CollapseAllGroupsCommand}"/>
        </ContextMenu>

        <ContextMenu  x:Key="EmergencyTerminalRowMenu" 
                      DataContext="{Binding DataContext, RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type UserControl}}}">
            <MenuItem Header="{DynamicResource ManangementCenter_UI_PublishSchedule}" Command="{Binding PublishManage.OpenPublishWizardCommand,Source={x:Static viewModel:ViewModelLocator.Instance}}" />
            <MenuItem Header="{DynamicResource ManangementCenter_UI_HistoricalInquiry}" Command="{Binding PublishManage.InquiryPublishHistoryCommand,Source={x:Static viewModel:ViewModelLocator.Instance}}" />
            <Separator />
            <MenuItem Header="{DynamicResource ManangementCenter_UI_InstantNotification}" Command="{Binding PublishManage.OpenInstantNotificationCommand,Source={x:Static viewModel:ViewModelLocator.Instance}}" />
            <MenuItem Header="{DynamicResource ManangementCenter_UI_HistoricalInquiry}" Command="{Binding PublishManage.InquiryInstantHistoryCommand,Source={x:Static viewModel:ViewModelLocator.Instance}}" />
            <Separator />
            <MenuItem Header="{DynamicResource ManangementCenter_UI_EmergencyList}" Command="{Binding PublishManage.OpenEmergencyPlaylistCommand,Source={x:Static viewModel:ViewModelLocator.Instance}}"/>
            <MenuItem Header="{DynamicResource ManangementCenter_UI_HistoricalInquiry}" Command="{Binding PublishManage.InquiryEmergencyHistoryCommand,Source={x:Static viewModel:ViewModelLocator.Instance}}" />
        </ContextMenu>
    </UserControl.Resources>
    
    <DockPanel>        
        <Border Height="42" DockPanel.Dock="Top" VerticalAlignment="Top" BorderThickness="0,0,0,1" BorderBrush="{DynamicResource custombordercolor}" Background="{DynamicResource menuitembarbgcolor}">
            <DockPanel HorizontalAlignment="Stretch">
                <StackPanel HorizontalAlignment="Left" VerticalAlignment="Center" Margin="10,0,0,0" Orientation="Horizontal">
                    <!--模式切换按钮-->
                    <bc:ImageButton HorizontalAlignment="Left" Height="20" Width="20">
                        <bc:ImageButton.Resources>
                            <Style TargetType="{x:Type bc:ImageButton}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding PublishManage.IsBatch, Source={x:Static viewModel:ViewModelLocator.Instance}}" Value="true">
                                        <Setter Property="Source" Value="/MC-go;component/Resources/Images/multi.png" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding PublishManage.IsBatch, Source={x:Static viewModel:ViewModelLocator.Instance}}" Value="false">
                                        <Setter Property="Source" Value="/MC-go;component/Resources/Images/single.png" />
                                    </DataTrigger>
                                </Style.Triggers>
                                <Setter Property="MinWidth" Value="20"/>
                                <Setter Property="Height" Value="20"/>
                                <Setter Property="BorderThickness" Value="0"/>
                                <Setter Property="Margin" Value="0"/>
                            </Style>
                        </bc:ImageButton.Resources>
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="Click">
                                <lCommand:EventToCommand Command="{Binding PublishManage.ChangeBatchMode,Source={x:Static viewModel:ViewModelLocator.Instance}}"
                                             MustToggleIsEnabledValue="True"
                                             PassEventArgsToCommand="True"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                        <Button.ToolTip>
                            <ToolTip>
                                <TextBlock Text="{Binding PublishManage.SelectModelHint,Source={x:Static viewModel:ViewModelLocator.Instance}}"/>
                            </ToolTip>
                        </Button.ToolTip>
                    </bc:ImageButton>
                </StackPanel>
                <StackPanel HorizontalAlignment="Right" VerticalAlignment="Center" Margin="0,0,20,0" Orientation="Horizontal">
                    <bc:SplitButton Content="{DynamicResource ManangementCenter_UI_PublishSchedule}" Style="{DynamicResource btnSplitButtonlist}" Command="{Binding OpenPublishWizardCommand}">
                        <Button Content="{DynamicResource ManangementCenter_UI_PublishSchedule}" Style="{DynamicResource btn_menubuttonitem}" 
                                       Command="{Binding OpenPublishWizardCommand}"/>
                        <Button Content="{DynamicResource ManangementCenter_UI_HistoricalInquiry}" Style="{DynamicResource btn_menubuttonitem}"
                                       Command="{Binding InquiryPublishHistoryCommand}"  />
                    </bc:SplitButton>

                    <bc:SplitButton Content="{DynamicResource ManangementCenter_UI_InstantNotification}" Style="{DynamicResource btnSplitButtontext}" Command="{Binding OpenInstantNotificationCommand}">
                        <Button Content="{DynamicResource ManangementCenter_UI_InstantNotification}" Style="{DynamicResource btn_menubuttonitem}" 
                                       Command="{Binding OpenInstantNotificationCommand}"/>
                        <Button Content="{DynamicResource ManangementCenter_UI_HistoricalInquiry}" Style="{DynamicResource btn_menubuttonitem}"
                                       Command="{Binding InquiryInstantHistoryCommand}"  />
                    </bc:SplitButton>
                    <bc:SplitButton Content="{DynamicResource ManangementCenter_UI_EmergencyList}" Style="{DynamicResource btnSplitButtonlist}" Command="{Binding OpenEmergencyPlaylistCommand}"  >
                        <Button Content="{DynamicResource ManangementCenter_UI_EmergencyList}" Style="{DynamicResource btn_menubuttonitem}"
                                       Command="{Binding OpenEmergencyPlaylistCommand}"   />
                        <Button Content="{DynamicResource ManangementCenter_UI_HistoricalInquiry}" Style="{DynamicResource btn_menubuttonitem}" 
                                       Command="{Binding InquiryEmergencyHistoryCommand}"   />
                    </bc:SplitButton>
                    <Border BorderBrush="#FF94A0B3" BorderThickness="1,0,0,0" Height="27" Margin="5,0">
                        <Border BorderBrush="#FFF2F4F8" BorderThickness="1,0,0,0"/>
                    </Border>

                    <bc:SplitButton Content="{DynamicResource ManangementCenter_UI_StatusRefresh}" Style="{DynamicResource btnSplitRefreshButtonlist}" 
                                DataContext="{Binding TerminalCollection, Source={x:Static viewModel:ViewModelLocator.Instance}}"
                                Command="{Binding RefreshTerminalStatusCommand}" >
                        <Button Content="{DynamicResource ManangementCenter_UI_StatusRefresh}" 
                            DataContext="{Binding TerminalCollection, Source={x:Static viewModel:ViewModelLocator.Instance}}"
                            Style="{DynamicResource btn_menubuttonitem}"
                            Command="{Binding RefreshTerminalStatusCommand}"/>
                        <Button Content="{DynamicResource ManangementCenter_UI_TerminalRefresh}" 
                            DataContext="{Binding TerminalCollection, Source={x:Static viewModel:ViewModelLocator.Instance}}"
                            Style="{DynamicResource btn_menubuttonitem}"
                            Command="{Binding RefreshTerminalListCommand}"/>
                    </bc:SplitButton>

                <control:SearchBox DataContext="{Binding TerminalCollection, Source={x:Static viewModel:ViewModelLocator.Instance}}" 
                                    KeyWord="{Binding SearchKeyword,Mode=TwoWay}"
                                   HorizontalAlignment="Left" VerticalAlignment="Center" Margin="5,0,0,0"
                                   Width="160" Height="26"/>
                </StackPanel>
            </DockPanel>
        </Border>

        <ContentControl x:Name="PublishControl" Unloaded="PublishControl_Unloaded" Grid.Row="1" FontSize="11">

        </ContentControl>

    </DockPanel>
</UserControl>
