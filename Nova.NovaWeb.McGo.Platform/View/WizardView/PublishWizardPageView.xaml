<UserControl x:Class="Nova.NovaWeb.McGo.Platform.View.PublishWizardPageView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:viewModel="clr-namespace:Nova.NovaWeb.McGo.Platform.ViewModel"
             xmlns:converter="clr-namespace:Nova.NovaWeb.McGo.Platform.Converter"
             xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
             xmlns:lCommand="clr-namespace:GalaSoft.MvvmLight.Command;assembly=GalaSoft.MvvmLight.Extras.WPF4"
             xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"             
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             mc:Ignorable="d" ><!--xmlns:my="clr-namespace:Loya.Dameer;assembly=Loya.Dameer"-->
    <UserControl.Resources>

        <!--<converter:ListTransmiteResToOperationConverter x:Key="ListTransmiteResToOperationConverter"/>
        <converter:ListTransmiteResToVisibilityConverter x:Key="ListTransmiteResToVisibilityConverter"/>
        <converter:NullToVisibilityConverter x:Key="NullToVisibilityConverter"/>-->
        <!--<Style x:Key="ShellThemeListBoxStyle" TargetType="{x:Type ListBoxItem}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                        <ContentPresenter HorizontalAlignment="Stretch" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Margin="0,0,0,10"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>-->

        <LinearGradientBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FFD9F4FF" Offset="0"/>
            <GradientStop Color="#FF9BDDFB" Offset="1"/>
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="{x:Static SystemColors.ControlBrushKey}" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FFEEEDED" Offset="0"/>
            <GradientStop Color="#FFDDDDDD" Offset="1"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}" Color="Black" />
        <SolidColorBrush x:Key="{x:Static SystemColors.ControlTextBrushKey}" Color="Black" />
        <Style TargetType="{x:Type ListBoxItem}">
            <Setter Property="BorderThickness" Value="1.5"/>
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="BorderBrush" Value="#adc6e5"/>
                </Trigger>
            </Style.Triggers>
            <Style.Resources>
                <Style TargetType="Border">
                    <Setter Property="CornerRadius" Value="2"/>
                </Style>
            </Style.Resources>
        </Style>


        <!--进度条样式-->
        <!--Control colors.-->
        <Color x:Key="WindowColor">#FFE8EDF9</Color>
        <Color x:Key="ContentAreaColorLight">#FFC5CBF9</Color>
        <Color x:Key="ContentAreaColorDark">#FF7381F9</Color>

        <Color x:Key="DisabledControlLightColor">#FFE8EDF9</Color>
        <Color x:Key="DisabledControlDarkColor">#FFC5CBF9</Color>
        <Color x:Key="DisabledForegroundColor">#FF888888</Color>

        <Color x:Key="SelectedBackgroundColor">#FFC5CBF9</Color>
        <Color x:Key="SelectedUnfocusedColor">#FFDDDDDD</Color>

        <Color x:Key="ControlLightColor">White</Color>
        <Color x:Key="ControlMediumColor">#77F972</Color>
        <Color x:Key="ControlDarkColor">#1CA91A</Color>

        <Color x:Key="ControlMouseOverColor">#7AC438</Color>
        <Color x:Key="ControlPressedColor">#1CA91A</Color>


        <Color x:Key="GlyphColor">#FF444444</Color>
        <Color x:Key="GlyphMouseOver">sc#1, 0.004391443, 0.002428215, 0.242281124</Color>

        <!--Border colors-->
        <Color x:Key="BorderLightColor">#FFCCCCCC</Color>
        <Color x:Key="BorderMediumColor">#FF888888</Color>
        <Color x:Key="BorderDarkColor">#FF444444</Color>

        <Color x:Key="PressedBorderLightColor">#FF888888</Color>
        <Color x:Key="PressedBorderDarkColor">#FF444444</Color>

        <Color x:Key="DisabledBorderLightColor">#FFAAAAAA</Color>
        <Color x:Key="DisabledBorderDarkColor">#FF888888</Color>

        <Color x:Key="DefaultBorderBrushDarkColor">Black</Color>

        <!--Control-specific resources.-->
        <Color x:Key="HeaderTopColor">#FFC5CBF9</Color>
        <Color x:Key="DatagridCurrentCellBorderColor">Black</Color>
        <Color x:Key="SliderTrackDarkColor">#FFC5CBF9</Color>

        <Color x:Key="NavButtonFrameColor">#38C43C</Color>

        <LinearGradientBrush x:Key="MenuPopupBrush"
                     EndPoint="0.5,1"
                     StartPoint="0.5,0">
            <GradientStop Color="{DynamicResource ControlLightColor}"
                Offset="0" />
            <GradientStop Color="{DynamicResource ControlMediumColor}"
                Offset="0.5" />
            <GradientStop Color="{DynamicResource ControlLightColor}"
                Offset="1" />
        </LinearGradientBrush>

        <LinearGradientBrush x:Key="ProgressBarIndicatorAnimatedFill"
                     StartPoint="0,0"
                     EndPoint="1,0">
            <LinearGradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="#000000FF"
                    Offset="0" />
                    <GradientStop Color="#6000FF18"
                    Offset="0.4" />
                    <GradientStop Color="#6000FF18"
                    Offset="0.6" />
                    <GradientStop Color="#000000FF"
                    Offset="1" />
                </GradientStopCollection>
            </LinearGradientBrush.GradientStops>
        </LinearGradientBrush>
        <Style x:Key="{x:Type ProgressBar}"
       TargetType="{x:Type ProgressBar}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ProgressBar}">
                        <Grid MinHeight="14"
                              MinWidth="200"
                              Background="{TemplateBinding Background}">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Determinate" />
                                    <VisualState x:Name="Indeterminate">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Duration="00:00:00"
                                                 Storyboard.TargetName="PART_Indicator"
                                                 Storyboard.TargetProperty="Background">
                                                <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <SolidColorBrush>Transparent</SolidColorBrush>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>

                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Border x:Name="PART_Track"
                                    CornerRadius="2"
                                    BorderThickness="1">
                                <Border.BorderBrush>
                                    <SolidColorBrush Color="{DynamicResource BorderMediumColor}" />
                                </Border.BorderBrush>
                            </Border>
                            <Border x:Name="PART_Indicator"
                                    CornerRadius="2"
                                    BorderThickness="1"
                                    HorizontalAlignment="Left"
                                    Background="{TemplateBinding Foreground}"
                                    Margin="0,-1,0,1">
                                <Border.BorderBrush>
                                    <LinearGradientBrush StartPoint="0,0"
                                   EndPoint="0,1">
                                        <GradientBrush.GradientStops>
                                            <GradientStopCollection>
                                                <GradientStop Color="{DynamicResource BorderLightColor}"
                                                              Offset="0.0" />
                                                <GradientStop Color="{DynamicResource BorderMediumColor}"
                                                              Offset="1.0" />
                                            </GradientStopCollection>
                                        </GradientBrush.GradientStops>
                                    </LinearGradientBrush>

                                </Border.BorderBrush>
                                <Grid ClipToBounds="True"
                                      x:Name="Animation">
                                    <Rectangle x:Name="PART_GlowRect"
                                               Width="100"
                                               HorizontalAlignment="Left"
                                               Fill="{StaticResource ProgressBarIndicatorAnimatedFill}"
                                               Margin="-100,0,0,0" />
                                </Grid>
                            </Border>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Background">
                <Setter.Value>
                    <LinearGradientBrush EndPoint="0,1"
                           StartPoint="0,0">
                        <GradientStop Color="{DynamicResource ControlLightColor}"
                      Offset="0" />
                        <GradientStop Color="{DynamicResource ControlMediumColor}"
                      Offset="1" />
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
            <Setter Property="Foreground">
                <Setter.Value>
                    <LinearGradientBrush EndPoint="0.5,1"
                           StartPoint="0.5,0">
                        <GradientStop Color="{DynamicResource ControlMediumColor}"
                      Offset="0" />
                        <GradientStop Color="{DynamicResource ControlDarkColor}"
                      Offset="1" />
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
        </Style>

    </UserControl.Resources>
    <!--<DockPanel>
        <StackPanel DockPanel.Dock="Top" Orientation="Vertical" Visibility="{Binding PcPublishInfo, Converter={StaticResource NullToVisibilityConverter}}">
            <TextBlock  Text="发布" HorizontalAlignment="Center" FontSize="16"/>
            <ContentControl Content="{Binding PublishDataInfo}"/>
        </StackPanel>     

      
    </DockPanel>-->
      
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="50"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <!--<RowDefinition Height="40*"/>-->
        </Grid.RowDefinitions>
        <Grid Grid.Column="0" >
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <TextBlock Grid.ColumnSpan="2" 
                       DataContext="{Binding Source={x:Static viewModel:PublishDataViewModel.Instance}}"  
                       
                       VerticalAlignment="Center" HorizontalAlignment="Center"/> <!--Text="{Binding Path=Schedule.DisplayScheduleName}"-->
            <Button Grid.Column="1" Content="{DynamicResource ManangementCenter_UI_InquiryPublish}" VerticalContentAlignment="Stretch" Height="24" Command="{Binding InquiryPublishHistoryCommand}" Visibility="{Binding IsAllPublishFinish, Converter={StaticResource BooleanToVisibilityConverter}}" Margin="0,13" HorizontalAlignment="Right" Width="Auto"/>
        </Grid>

        <Grid Grid.Row="1" Margin="10" Visibility="{Binding IsShowSetting, Converter={StaticResource BooleanToVisibilityConverter}}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <StackPanel Orientation="Horizontal" Margin="0,0,10,0" IsEnabled="True" Height="22" VerticalAlignment="Top">
                <RadioButton Content="{DynamicResource ManangementCenter_UI_NowPublish}" VerticalAlignment="Center" Margin="5,0" IsChecked="{Binding IsRightNow}"/>
                <RadioButton Content="{DynamicResource ManangementCenter_UI_DefaultPublish}" VerticalAlignment="Center" Margin="5,0" IsChecked="{Binding IsDefault}"/>
                <RadioButton x:Name="timerSetting" Margin="5,0"
                             Content="{DynamicResource ManangementCenter_UI_TimePublish}" VerticalAlignment="Center"
                             IsChecked="{Binding IsTimer}"/>
            </StackPanel>
            <StackPanel Grid.Column="1" Orientation="Horizontal" Visibility="{Binding ElementName=timerSetting, Path=IsChecked, Converter={StaticResource BooleanToVisibilityConverter}}">
                <ComboBox Width="170" Height="Auto" VerticalAlignment="Center" Margin="0,0,10,0" 
                          ItemsSource="{Binding TimeZoneTable}" SelectedItem="{Binding SelectedTimeZoneInfo}" DisplayMemberPath="DisplayName"
                          Visibility="{Binding ElementName=timezoneSetting, Path=IsChecked, Converter={StaticResource BooleanToVisibilityConverter}}">
                    
                </ComboBox>
                <!--<DatePicker Width="150" Height="Auto" SelectedDate="{Binding TimingTime}"  VerticalAlignment="Center" VerticalContentAlignment="Center" Margin="0,0,10,0"/>-->
                <xctk:DateTimePicker x:Name="TimePicker" Width="250" Height="Auto" Value="{Binding TimingTime,Mode=TwoWay,  UpdateSourceTrigger=PropertyChanged}"                                      
                                     AutoCloseCalendar="True"
                                     ShowButtonSpinner="True" MouseWheelActiveOnFocus="True"  VerticalAlignment="Center" Format="Custom" FormatString="yyyy/MM/dd HH:mm:ss"  VerticalContentAlignment="Center" Margin="0,0,10,0"><!--FormatString="HH:MM:SS"-->
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="ValueChanged">
                            <lCommand:EventToCommand Command="{Binding DataContext.DateTimeValueChangedCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}"
                                                     MustToggleIsEnabledValue="True"
                                                     PassEventArgsToCommand="True"/>
                        </i:EventTrigger>

                    </i:Interaction.Triggers>
                </xctk:DateTimePicker>
                <!--<my:Dameer HorizontalAlignment="Left" Value="{Binding TimingTime,Mode=TwoWay}" Height="25" Width="220"
                           VerticalAlignment="Center" ShowCheckBox="False" Checked="True" Format="Custom" CustomFormat="yyyy/MM/dd hh:mm:ss tt   MMMM - dddd" />-->
                <CheckBox x:Name="timezoneSetting" Content="{DynamicResource ManangementCenter_UI_IsSetTimeZone}"
                          VerticalAlignment="Center" VerticalContentAlignment="Center" IsChecked="{Binding IsEnableTimeZone}"/>
            </StackPanel>
        </Grid>

        <!--<xctk:BusyIndicator IsBusy="True">
            <StackPanel>
                <TextBlock  Text="正在停止发布"/>
            </StackPanel>
        </xctk:BusyIndicator>-->
        <DataGrid x:Name="dataGrid" AutoGenerateColumns="False" Grid.Row="2" BorderThickness="0" Margin="0,10,0,0"
                 DataContext="{Binding Source={x:Static viewModel:PublishDataViewModel.Instance}}"
                 ItemsSource="{Binding PublishTerminalInfoList}"                 
                 IsReadOnly="True"
                 HorizontalAlignment="Stretch"
                 SelectionMode="Extended" EnableRowVirtualization="False"
                 IsSynchronizedWithCurrentItem="True"
                 Background="#00000000" HorizontalScrollBarVisibility="Auto"
                 HeadersVisibility="Column" 
                 Width="Auto" AllowDrop="False" SelectedItem="{Binding DataContext.FirstTerminal, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}">

            <DataGrid.ColumnHeaderStyle >
                <Style TargetType="{x:Type DataGridColumnHeader}" BasedOn="{StaticResource DefaultDataGridColumnHeaderStyle}">
                    <Setter Property="HorizontalContentAlignment" Value="Center"/>
                </Style>
            </DataGrid.ColumnHeaderStyle>

            <DataGrid.Columns>
                <DataGridTemplateColumn Header="{DynamicResource ManangementCenter_UI_PublishTerminalName}"  Width="Auto" SortMemberPath="TerminalInfo.Name">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Vertical" HorizontalAlignment="Center"  VerticalAlignment="Center" Margin="20,0">
                                <Image Width="32" HorizontalAlignment="Center" Source="{Binding TerminalInfo.IsOnline, Converter={StaticResource OnlineToImageSourceConverter}}" />
                                <TextBlock Text="{Binding TerminalInfo.Name}" HorizontalAlignment="Center" Width="Auto"
                                       TextTrimming="CharacterEllipsis"/>
                            </StackPanel>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <DataGridTextColumn Header="{DynamicResource ManangementCenter_UI_PublishGroupName}"  Width="Auto" Binding="{Binding TerminalInfo.GroupName}"/>
                <DataGridTextColumn Header="{DynamicResource ManangementCenter_UI_PublishTerminalType}"  Width="Auto" Binding="{Binding TerminalInfo.Type,Converter={StaticResource TerminalTypeConverter}}"/>
                <!--<DataGridTextColumn Header="{DynamicResource ManangementCenter_UI_PublishTerminalTimeZoneId}"  Width="200" Binding="{Binding TerminalInfo.TimeZoneId, Converter={StaticResource IdToTimeZoneConverter}}"/>-->
                <DataGridTemplateColumn Header="{DynamicResource ManangementCenter_UI_PublishTerminalTimeZoneId}"  Width="200">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Vertical" HorizontalAlignment="Center" Margin="20,0">
                                <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center"
                                       Text="{Binding TerminalInfo.TimeZoneId, Converter={StaticResource IdToTimeZoneConverter}}"
                                           TextTrimming="CharacterEllipsis"/>
                                <StackPanel.ToolTip>
                                    <ToolTip>
                                        <TextBlock Text="{Binding TerminalInfo.TimeZoneId, Converter={StaticResource IdToTimeZoneConverter}}"/>
                                    </ToolTip>
                                </StackPanel.ToolTip>
                            </StackPanel>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <DataGridTemplateColumn Header="{DynamicResource ManangementCenter_UI_PublishMode}"  Width="*" SortMemberPath="PubSettingInfo.ExecuteTime">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Vertical" HorizontalAlignment="Center" Margin="20,0">
                                <TextBlock Text="{Binding PubSettingInfo.CmdMode,Converter={StaticResource CommandTypeConverter}}" 
                                       HorizontalAlignment="Center"
                                       TextTrimming="CharacterEllipsis"/>
                                <TextBlock Visibility="{Binding PubSettingInfo.CmdMode,Converter={StaticResource CmdModeToVisibilityConverter}}"
                                       HorizontalAlignment="Center"
                                       TextTrimming="CharacterEllipsis" >
                                    <TextBlock.Text>
                                        <MultiBinding Converter="{StaticResource DisplayTimeConverter}">
                                            <Binding  Path="PubSettingInfo.ExecuteTime"/>
                                            <Binding  Path="PubSettingInfo.TimeZoneInfo"/>
                                        </MultiBinding>
                                    </TextBlock.Text>
                                </TextBlock>
                                <TextBlock Visibility="{Binding PubSettingInfo.CmdMode,Converter={StaticResource CmdModeToVisibilityConverter}}"
                                       Text="{Binding PubSettingInfo.TimeZoneInfo.Id,Converter={StaticResource IdToTimeZoneConverter}}"
                                       HorizontalAlignment="Center"
                                       TextTrimming="CharacterEllipsis">
                                    <TextBlock.ToolTip>
                                        <ToolTip>
                                            <TextBlock Text="{Binding PubSettingInfo.TimeZoneInfo.Id,Converter={StaticResource IdToTimeZoneConverter}}"/>
                                        </ToolTip>
                                    </TextBlock.ToolTip>
                                </TextBlock>
                            </StackPanel>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <DataGridTemplateColumn Header="{DynamicResource ManangementCenter_UI_ProgressPercentage}"  Width="2*" SortMemberPath="ProgressPercentage">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Grid  HorizontalAlignment="Center" VerticalAlignment="Center" Margin="20,0">
                                <ProgressBar Value="{Binding ProgressPercentage}" 
                                         Width="180" Height="20" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                                <TextBlock  Background="#00ffffff" HorizontalAlignment="Center" VerticalAlignment="Center" Width="180" TextAlignment="Center" TextTrimming="CharacterEllipsis">
                                    <TextBlock.Text>
                                        <MultiBinding Converter="{StaticResource ProgressConverter}">
                                            <Binding  Path="ProgressPercentage"/>
                                            <Binding Path="CurrentDataItemIndex"/>
                                            <Binding Path="DataItemCount"/>
                                            <Binding  Path="PubResult.TransmiteResult"/>
                                            <Binding  Path="PubResult.CommandSendResult"/>
                                        </MultiBinding>
                                    </TextBlock.Text>
                                    <TextBlock.ToolTip>
                                        <ToolTip>
                                            <TextBlock>
                                                <TextBlock.Text>
                                                    <MultiBinding Converter="{StaticResource ProgressConverter}">
                                                        <Binding  Path="ProgressPercentage"/>
                                                        <Binding Path="CurrentDataItemIndex"/>
                                                        <Binding Path="DataItemCount"/>
                                                        <Binding  Path="PubResult.TransmiteResult"/>
                                                        <Binding  Path="PubResult.CommandSendResult"/>
                                                    </MultiBinding>
                                                </TextBlock.Text>
                                            </TextBlock>
                                        </ToolTip>
                                    </TextBlock.ToolTip>
                                </TextBlock>
                            </Grid>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

            </DataGrid.Columns>
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="SelectionChanged">
                    <lCommand:EventToCommand Command="{Binding DataContext.SelectionChangedCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}"
                                             MustToggleIsEnabledValue="True"
                                             PassEventArgsToCommand="True"/>
                </i:EventTrigger>
            </i:Interaction.Triggers>
        </DataGrid>
    </Grid>

</UserControl>
