<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:bc="BetterWpfControls"
                   xmlns:viewModel="clr-namespace:Nova.NovaWeb.McGo.Platform.ViewModel"
                    xmlns:gif="clr-namespace:GifImageLib;assembly=GifImageLib"
                    xmlns:bc_Converters="clr-namespace:BetterWpfControls.Converters;assembly=BetterWpfControls">

    <bc_Converters:NullToVisibilityConverter x:Key="CONV_NullToVisibility"/>
    
    <!--Common Style-->
    <Style x:Key="ButtonFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!--Button Style-->
    <!--<Style x:Key="linkStyle" TargetType ="Hyperlink" >
        <Setter  Property ="Foreground"  Value ="#209AC2" />
        --><!-- 清除文字修饰(去掉下划线) --><!--
        <Setter  Property ="TextBlock.TextDecorations"  Value ="{x:Null}" />
        <Style.Triggers >
            <Trigger  Property ="IsMouseOver"  Value ="True" >
                <Setter  Property ="Foreground"  Value ="#F27D00"   />
                --><!-- 在鼠标悬停时显示下划线 --><!--
                <Setter  Property ="TextBlock.TextDecorations" >
                    <Setter.Value >
                        <TextDecorationCollection >
                            <TextDecoration  Location ="Underline" />
                        </TextDecorationCollection>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>-->



    <Style x:Key="btnconfig" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Background="#00000000">
                        <Border x:Name="border"  BorderThickness="1" CornerRadius="2" Grid.ColumnSpan="2" Visibility="Hidden" BorderBrush="{DynamicResource custombordercolor}" Height="Auto" Background="{DynamicResource btnmenubgcolor}">
                            <Border  BorderThickness="0,1,0,0" CornerRadius="1" Visibility="Visible" Height="Auto" Background="{x:Null}" BorderBrush="White"/>
                        </Border>
                        <Image x:Name="image" Source="/MC-go;component/Resources/Images/config.png" Stretch="None" HorizontalAlignment="Center" VerticalAlignment="Center" RenderTransformOrigin="0.5,0.5">
                            <Image.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform/>
                                    <SkewTransform/>
                                    <RotateTransform/>
                                    <TranslateTransform/>
                                </TransformGroup>
                            </Image.RenderTransform>
                        </Image>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True"/>
                        <Trigger Property="IsDefaulted" Value="True"/>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Visibility" TargetName="border" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Visibility" TargetName="border" Value="Visible"/>
                            <Setter Property="RenderTransform" TargetName="image">
                                <Setter.Value>
                                    <TransformGroup>
                                        <ScaleTransform/>
                                        <SkewTransform/>
                                        <RotateTransform/>
                                        <TranslateTransform Y="1"/>
                                    </TransformGroup>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource enabletextcolor}"/>
                            <Setter Property="Source" TargetName="image" Value="/MC-go;component/Resources/Images/config2.png"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Padding" Value="0,1,0,0"/>
        <Setter Property="Height" Value="26"/>
        <Setter Property="Width" Value="26"/>
    </Style>

    <Style x:Key="btnquit" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Background="#00000000">
                        <Border x:Name="border"  BorderThickness="1" CornerRadius="2" Grid.ColumnSpan="1" Visibility="Hidden" BorderBrush="{DynamicResource custombordercolor}" Height="Auto" Background="{DynamicResource btnmenubgcolor}">
                            <Border  BorderThickness="0,1,0,0" CornerRadius="1" Visibility="Visible" Height="Auto" Background="{x:Null}" BorderBrush="White"/>
                        </Border>
                        <StackPanel Orientation="Vertical" Margin="8">
                            <Image Source="/MC-go;component/Resources/Images/Quit.png" Stretch="None"/>
                            <ContentPresenter x:Name="contentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="0,5,0,0" RenderTransformOrigin="0.5,0.5">
                                <ContentPresenter.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform/>
                                        <SkewTransform/>
                                        <RotateTransform/>
                                        <TranslateTransform/>
                                    </TransformGroup>
                                </ContentPresenter.RenderTransform>
                            </ContentPresenter>
                        </StackPanel>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True"/>
                        <Trigger Property="IsDefaulted" Value="True"/>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Visibility" TargetName="border" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Visibility" TargetName="border" Value="Visible"/>
                            <Setter Property="Background" TargetName="border" Value="{DynamicResource btnpressgradcolor}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False"/>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Margin" Value="10,0"/>
    </Style>
    
    <Style x:Key="btnlogout" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Background="#00000000">
                        <Border x:Name="border"  BorderThickness="1" CornerRadius="2" Grid.ColumnSpan="1" Visibility="Hidden" BorderBrush="{DynamicResource custombordercolor}" Height="Auto" Background="{DynamicResource btnmenubgcolor}">
                            <Border  BorderThickness="0,1,0,0" CornerRadius="1" Visibility="Visible" Height="Auto" Background="{x:Null}" BorderBrush="White"/>
                        </Border>
                        <StackPanel Orientation="Vertical" Margin="8">
                            <Image Source="/MC-go;component/Resources/Images/Logout.png" Stretch="None"/>
                            <ContentPresenter x:Name="contentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="0,5,0,0" RenderTransformOrigin="0.5,0.5">
                                <ContentPresenter.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform/>
                                        <SkewTransform/>
                                        <RotateTransform/>
                                        <TranslateTransform/>
                                    </TransformGroup>
                                </ContentPresenter.RenderTransform>
                            </ContentPresenter>
                        </StackPanel>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True"/>
                        <Trigger Property="IsDefaulted" Value="True"/>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Visibility" TargetName="border" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Visibility" TargetName="border" Value="Visible"/>
                            <Setter Property="Background" TargetName="border" Value="{DynamicResource btnpressgradcolor}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False"/>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Margin" Value="10,0"/>
    </Style>

    <Style x:Key="btn_login" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Grid ClipToBounds="True" Width="151" Height="49">
                            <Image x:Name="image" Source="/MC-go;component/Resources/Images/btn_login.png" Stretch="None"/>
                        </Grid>
                        <ContentPresenter RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center" Width="Auto" Grid.Column="0" HorizontalAlignment="Center"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True"/>
                        <Trigger Property="IsDefaulted" Value="True"/>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Margin" TargetName="image" Value="0,-55,0,0"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Margin" TargetName="image" Value="0,-110,0,0"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False"/>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="FontFamily" Value="Arial, Helvetica, sans-serif,黑体"/>
    </Style>

    <Style x:Key="MenuButton" TargetType="{x:Type bc:MenuButton}">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="ContentBorderBrush" Value="LightGray" />
        <Setter Property="ContentBorderThickness" Value="0,0,0,1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type bc:MenuButton}">
                    <Grid Background="{TemplateBinding Background}">
                        <ToggleButton x:Name="ToggleButton" Opacity="1" Focusable="false" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" ClickMode="Press" HorizontalAlignment="Stretch" VerticalAlignment="{TemplateBinding VerticalAlignment}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}">
                            <ToggleButton.Template>
                                <ControlTemplate TargetType="{x:Type ToggleButton}">
                                    <Grid Background="#00000000">
                                        <Border x:Name="border"  BorderThickness="1" CornerRadius="2" Grid.ColumnSpan="1" Visibility="Hidden" BorderBrush="{DynamicResource custombordercolor}" Height="Auto" Background="{DynamicResource btnmenubgcolor}">
                                            <Border  BorderThickness="0,1,0,0" CornerRadius="1" Visibility="Visible" Height="Auto" Background="{x:Null}" BorderBrush="White"/>
                                        </Border>

                                        <Path x:Name="p1" Stretch="Fill" Fill="#FF2B2B2B" Data="F1 M 336.386,319.504L 348.507,302.507L 324.265,302.507L 336.386,319.504 Z " Height="4" Width="7" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="4,0" RenderTransformOrigin="0.5,0.5">
                                            <Path.RenderTransform>
                                                <TransformGroup>
                                                    <ScaleTransform/>
                                                    <SkewTransform/>
                                                    <RotateTransform/>
                                                    <TranslateTransform/>
                                                </TransformGroup>
                                            </Path.RenderTransform>
                                        </Path>

                                    </Grid>

                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsFocused" Value="True"/>

                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Visibility" TargetName="border" Value="Visible"/>
                                        </Trigger>
                                        <Trigger Property="IsPressed" Value="True">
                                            <Setter Property="Visibility" TargetName="border" Value="Visible"/>
                                            <Setter Property="RenderTransform" TargetName="p1">
                                                <Setter.Value>
                                                    <TransformGroup>
                                                        <ScaleTransform/>
                                                        <SkewTransform/>
                                                        <RotateTransform/>
                                                        <TranslateTransform Y="1"/>
                                                    </TransformGroup>
                                                </Setter.Value>
                                            </Setter>
                                        </Trigger>
                                        <Trigger Property="IsEnabled" Value="False">
                                            <Setter Property="Fill" TargetName="p1" Value="{DynamicResource enablefalsebordercolor}"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </ToggleButton.Template>
                        </ToggleButton>

                        <Border BorderBrush="{TemplateBinding ContentBorderBrush}" BorderThickness="{TemplateBinding ContentBorderThickness}" Margin="0,0,16,0" Visibility="{Binding Content, Converter={StaticResource CONV_NullToVisibility}, RelativeSource={RelativeSource Mode=TemplatedParent}}">
                            <ContentPresenter ContentSource="Content" />
                        </Border>

                        <Popup x:Name="Popup" Placement="Bottom" IsOpen="{TemplateBinding IsDropDownOpen}" AllowsTransparency="True" Focusable="False" PopupAnimation="Slide">
                            <Grid x:Name="DropDown" SnapsToDevicePixels="True" MinWidth="{TemplateBinding ActualWidth}" MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                <Border Grid.ColumnSpan="1" BorderThickness="1" Background="{DynamicResource menulistbgcolor}" BorderBrush="{DynamicResource custombordercolor}" CornerRadius="2" HorizontalAlignment="Stretch" Width="Auto" >
                                    <Border BorderThickness="1" CornerRadius="1" Padding="1,2" BorderBrush="White"/>
                                </Border>
                                <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="false"/>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="Gray"/>
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                        </Trigger>
                        <Trigger SourceName="Popup" Property="AllowsTransparency" Value="true"/>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="AlwaysShowToggleButton" Value="False" />
                                <Condition Property="IsMouseOver" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="ToggleButton" Property="Opacity" Value="0" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--删除按钮Style-->
    <Style x:Key="btnmindelete" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Background="#00000000">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="22"/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <Border x:Name="border"  BorderThickness="1" CornerRadius="2" Grid.ColumnSpan="2" Visibility="Hidden" BorderBrush="{DynamicResource custombordercolor}" Height="Auto" Background="{DynamicResource btnmenubgcolor}">
                            <Border  BorderThickness="0,1,0,0" CornerRadius="1" Visibility="Visible" Height="Auto" Background="{x:Null}" BorderBrush="White"/>
                        </Border>
                        <ContentPresenter x:Name="contentPresenter" HorizontalAlignment="Stretch" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center" Height="Auto" Width="Auto" Grid.Column="1" Margin="4,0,8,0" RenderTransformOrigin="0.5,0.5">
                            <ContentPresenter.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform/>
                                    <SkewTransform/>
                                    <RotateTransform/>
                                    <TranslateTransform/>
                                </TransformGroup>
                            </ContentPresenter.RenderTransform>
                        </ContentPresenter>
                        <Image x:Name="image" Source="/MC-go;component/Resources/Images/delete.png" Stretch="None" HorizontalAlignment="Right" VerticalAlignment="Center" RenderTransformOrigin="0.5,0.5">
                            <Image.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform/>
                                    <SkewTransform/>
                                    <RotateTransform/>
                                    <TranslateTransform/>
                                </TransformGroup>
                            </Image.RenderTransform>
                        </Image>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True"/>
                        <Trigger Property="IsDefaulted" Value="True"/>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Visibility" TargetName="border" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Visibility" TargetName="border" Value="Visible"/>
                            <Setter Property="RenderTransform" TargetName="contentPresenter">
                                <Setter.Value>
                                    <TransformGroup>
                                        <ScaleTransform/>
                                        <SkewTransform/>
                                        <RotateTransform/>
                                        <TranslateTransform Y="1"/>
                                    </TransformGroup>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="RenderTransform" TargetName="image">
                                <Setter.Value>
                                    <TransformGroup>
                                        <ScaleTransform/>
                                        <SkewTransform/>
                                        <RotateTransform/>
                                        <TranslateTransform Y="1"/>
                                    </TransformGroup>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Source" TargetName="image" Value="/MC-go;component/Resources/Images/delete2.png"/>
                            <Setter Property="Foreground" Value="{DynamicResource enabletextcolor}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Padding" Value="0,1,0,0"/>
        <Setter Property="Height" Value="26"/>
    </Style>


    <Style x:Key="btnmuexport" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Background="#00000000">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="22"/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <Border x:Name="border"  BorderThickness="1" CornerRadius="2" Grid.ColumnSpan="2" Visibility="Hidden" BorderBrush="{DynamicResource custombordercolor}" Height="Auto" Background="{DynamicResource btnmenubgcolor}">
                            <Border  BorderThickness="0,1,0,0" CornerRadius="1" Visibility="Visible" Height="Auto" Background="{x:Null}" BorderBrush="White"/>
                        </Border>
                        <ContentPresenter x:Name="contentPresenter" HorizontalAlignment="Stretch" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center" Height="Auto" Width="Auto" Grid.Column="1" Margin="4,0,8,0" RenderTransformOrigin="0.5,0.5">
                            <ContentPresenter.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform/>
                                    <SkewTransform/>
                                    <RotateTransform/>
                                    <TranslateTransform/>
                                </TransformGroup>
                            </ContentPresenter.RenderTransform>
                        </ContentPresenter>
                        <Image x:Name="image" Source="/MC-go;component/Resources/Images/uexport.png" Stretch="None" HorizontalAlignment="Right" VerticalAlignment="Center" RenderTransformOrigin="0.5,0.5">
                            <Image.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform/>
                                    <SkewTransform/>
                                    <RotateTransform/>
                                    <TranslateTransform/>
                                </TransformGroup>
                            </Image.RenderTransform>
                        </Image>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True"/>
                        <Trigger Property="IsDefaulted" Value="True"/>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Visibility" TargetName="border" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Visibility" TargetName="border" Value="Visible"/>
                            <Setter Property="RenderTransform" TargetName="contentPresenter">
                                <Setter.Value>
                                    <TransformGroup>
                                        <ScaleTransform/>
                                        <SkewTransform/>
                                        <RotateTransform/>
                                        <TranslateTransform Y="1"/>
                                    </TransformGroup>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="RenderTransform" TargetName="image">
                                <Setter.Value>
                                    <TransformGroup>
                                        <ScaleTransform/>
                                        <SkewTransform/>
                                        <RotateTransform/>
                                        <TranslateTransform Y="1"/>
                                    </TransformGroup>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource enabletextcolor}"/>
                            <Setter Property="Source" TargetName="image" Value="/MC-go;component/Resources/Images/uexport2.png"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Padding" Value="0,1,0,0"/>
        <Setter Property="Height" Value="26"/>
    </Style>
    <Style x:Key="btnmnewfile" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Background="#00000000">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="22"/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <Border x:Name="border"  BorderThickness="1" CornerRadius="2" Grid.ColumnSpan="2" Visibility="Hidden" BorderBrush="{DynamicResource custombordercolor}" Height="Auto" Background="{DynamicResource btnmenubgcolor}">
                            <Border  BorderThickness="0,1,0,0" CornerRadius="1" Visibility="Visible" Height="Auto" Background="{x:Null}" BorderBrush="White"/>
                        </Border>
                        <ContentPresenter x:Name="contentPresenter" HorizontalAlignment="Stretch" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center" Height="Auto" Width="Auto" Grid.Column="1" Margin="4,0,8,0" RenderTransformOrigin="0.5,0.5">
                            <ContentPresenter.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform/>
                                    <SkewTransform/>
                                    <RotateTransform/>
                                    <TranslateTransform/>
                                </TransformGroup>
                            </ContentPresenter.RenderTransform>
                        </ContentPresenter>
                        <Image x:Name="image" Source="/MC-go;component/Resources/Images/addfile.png" Stretch="None" HorizontalAlignment="Right" VerticalAlignment="Center" RenderTransformOrigin="0.5,0.5">
                            <Image.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform/>
                                    <SkewTransform/>
                                    <RotateTransform/>
                                    <TranslateTransform/>
                                </TransformGroup>
                            </Image.RenderTransform>
                        </Image>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True"/>
                        <Trigger Property="IsDefaulted" Value="True"/>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Visibility" TargetName="border" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Visibility" TargetName="border" Value="Visible"/>
                            <Setter Property="RenderTransform" TargetName="contentPresenter">
                                <Setter.Value>
                                    <TransformGroup>
                                        <ScaleTransform/>
                                        <SkewTransform/>
                                        <RotateTransform/>
                                        <TranslateTransform Y="1"/>
                                    </TransformGroup>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="RenderTransform" TargetName="image">
                                <Setter.Value>
                                    <TransformGroup>
                                        <ScaleTransform/>
                                        <SkewTransform/>
                                        <RotateTransform/>
                                        <TranslateTransform Y="1"/>
                                    </TransformGroup>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource enabletextcolor}"/>
                            <Setter Property="Source" TargetName="image" Value="/MC-go;component/Resources/Images/addfile2.png"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Padding" Value="0,1,0,0"/>
        <Setter Property="Height" Value="26"/>
    </Style>
    <Style x:Key="btnmhistory" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Background="#00000000">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="22"/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <Border x:Name="border"  BorderThickness="1" CornerRadius="2" Grid.ColumnSpan="2" Visibility="Hidden" BorderBrush="{DynamicResource custombordercolor}" Height="Auto" Background="{DynamicResource btnmenubgcolor}">
                            <Border  BorderThickness="0,1,0,0" CornerRadius="1" Visibility="Visible" Height="Auto" Background="{x:Null}" BorderBrush="White"/>
                        </Border>
                        <ContentPresenter x:Name="contentPresenter" HorizontalAlignment="Stretch" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center" Height="Auto" Width="Auto" Grid.Column="1" Margin="4,0,8,0" RenderTransformOrigin="0.5,0.5">
                            <ContentPresenter.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform/>
                                    <SkewTransform/>
                                    <RotateTransform/>
                                    <TranslateTransform/>
                                </TransformGroup>
                            </ContentPresenter.RenderTransform>
                        </ContentPresenter>
                        <Image x:Name="image" Source="/MC-go;component/Resources/Images/history.png" Stretch="None" HorizontalAlignment="Right" VerticalAlignment="Center" RenderTransformOrigin="0.5,0.5">
                            <Image.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform/>
                                    <SkewTransform/>
                                    <RotateTransform/>
                                    <TranslateTransform/>
                                </TransformGroup>
                            </Image.RenderTransform>
                        </Image>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True"/>
                        <Trigger Property="IsDefaulted" Value="True"/>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Visibility" TargetName="border" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Visibility" TargetName="border" Value="Visible"/>
                            <Setter Property="RenderTransform" TargetName="contentPresenter">
                                <Setter.Value>
                                    <TransformGroup>
                                        <ScaleTransform/>
                                        <SkewTransform/>
                                        <RotateTransform/>
                                        <TranslateTransform Y="1"/>
                                    </TransformGroup>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="RenderTransform" TargetName="image">
                                <Setter.Value>
                                    <TransformGroup>
                                        <ScaleTransform/>
                                        <SkewTransform/>
                                        <RotateTransform/>
                                        <TranslateTransform Y="1"/>
                                    </TransformGroup>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource enabletextcolor}"/>
                            <Setter Property="Source" TargetName="image" Value="/MC-go;component/Resources/Images/history2.png"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Padding" Value="0,1,0,0"/>
        <Setter Property="Height" Value="26"/>
    </Style>
    <Style x:Key="btnmrefresh" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Background="#00000000">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="22"/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <Border x:Name="border"  BorderThickness="1" CornerRadius="2" Grid.ColumnSpan="2" Visibility="Hidden" BorderBrush="{DynamicResource custombordercolor}" Height="Auto" Background="{DynamicResource btnmenubgcolor}">
                            <Border  BorderThickness="0,1,0,0" CornerRadius="1" Visibility="Visible" Height="Auto" Background="{x:Null}" BorderBrush="White"/>
                        </Border>
                        <ContentPresenter x:Name="contentPresenter" HorizontalAlignment="Stretch" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center" Height="Auto" Width="Auto" Grid.Column="1" Margin="4,0,8,0" RenderTransformOrigin="0.5,0.5">
                            <ContentPresenter.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform/>
                                    <SkewTransform/>
                                    <RotateTransform/>
                                    <TranslateTransform/>
                                </TransformGroup>
                            </ContentPresenter.RenderTransform>
                        </ContentPresenter>
                        <Image x:Name="image" Source="/MC-go;component/Resources/Images/mrefresh.png" Stretch="None" HorizontalAlignment="Right" VerticalAlignment="Center" RenderTransformOrigin="0.5,0.5">
                            <Image.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform/>
                                    <SkewTransform/>
                                    <RotateTransform/>
                                    <TranslateTransform/>
                                </TransformGroup>
                            </Image.RenderTransform>
                        </Image>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True"/>
                        <Trigger Property="IsDefaulted" Value="True"/>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Visibility" TargetName="border" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Visibility" TargetName="border" Value="Visible"/>
                            <Setter Property="RenderTransform" TargetName="contentPresenter">
                                <Setter.Value>
                                    <TransformGroup>
                                        <ScaleTransform/>
                                        <SkewTransform/>
                                        <RotateTransform/>
                                        <TranslateTransform Y="1"/>
                                    </TransformGroup>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="RenderTransform" TargetName="image">
                                <Setter.Value>
                                    <TransformGroup>
                                        <ScaleTransform/>
                                        <SkewTransform/>
                                        <RotateTransform/>
                                        <TranslateTransform Y="1"/>
                                    </TransformGroup>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource enabletextcolor}"/>
                            <Setter Property="Source" TargetName="image" Value="/MC-go;component/Resources/Images/mrefresh2.png"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Padding" Value="0,1,0,0"/>
        <Setter Property="Height" Value="26"/>
    </Style>
    <Style x:Key="btnmsearch" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Background="#00000000">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="22"/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <Border x:Name="border"  BorderThickness="1" CornerRadius="2" Grid.ColumnSpan="2" Visibility="Hidden" BorderBrush="{DynamicResource custombordercolor}" Height="Auto" Background="{DynamicResource btnmenubgcolor}">
                            <Border  BorderThickness="0,1,0,0" CornerRadius="1" Visibility="Visible" Height="Auto" Background="{x:Null}" BorderBrush="White"/>
                        </Border>
                        <ContentPresenter x:Name="contentPresenter" HorizontalAlignment="Stretch" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center" Height="Auto" Width="Auto" Grid.Column="1" Margin="4,0,8,0" RenderTransformOrigin="0.5,0.5">
                            <ContentPresenter.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform/>
                                    <SkewTransform/>
                                    <RotateTransform/>
                                    <TranslateTransform/>
                                </TransformGroup>
                            </ContentPresenter.RenderTransform>
                        </ContentPresenter>
                        <Image x:Name="image" Source="/MC-go;component/Resources/Images/msearch.png" Stretch="None" HorizontalAlignment="Right" VerticalAlignment="Center" RenderTransformOrigin="0.5,0.5">
                            <Image.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform/>
                                    <SkewTransform/>
                                    <RotateTransform/>
                                    <TranslateTransform/>
                                </TransformGroup>
                            </Image.RenderTransform>
                        </Image>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True"/>
                        <Trigger Property="IsDefaulted" Value="True"/>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Visibility" TargetName="border" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Visibility" TargetName="border" Value="Visible"/>
                            <Setter Property="RenderTransform" TargetName="contentPresenter">
                                <Setter.Value>
                                    <TransformGroup>
                                        <ScaleTransform/>
                                        <SkewTransform/>
                                        <RotateTransform/>
                                        <TranslateTransform Y="1"/>
                                    </TransformGroup>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="RenderTransform" TargetName="image">
                                <Setter.Value>
                                    <TransformGroup>
                                        <ScaleTransform/>
                                        <SkewTransform/>
                                        <RotateTransform/>
                                        <TranslateTransform Y="1"/>
                                    </TransformGroup>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource enabletextcolor}"/>
                            <Setter Property="Source" TargetName="image" Value="/MC-go;component/Resources/Images/msearch2.png"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Padding" Value="0,1,0,0"/>
        <Setter Property="Height" Value="26"/>
    </Style>


    <ControlTemplate x:Key="btnmcmdsearch" TargetType="{x:Type Button}">
        <Grid Background="#00000000">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="22"/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <Border x:Name="border"  BorderThickness="1" CornerRadius="2" Grid.ColumnSpan="2" Visibility="Hidden" BorderBrush="{DynamicResource custombordercolor}" Height="Auto" Background="{DynamicResource btnmenubgcolor}">
                <Border  BorderThickness="0,1,0,0" CornerRadius="1" Visibility="Visible" Height="Auto" Background="{x:Null}" BorderBrush="White"/>
            </Border>
            <ContentPresenter x:Name="contentPresenter" HorizontalAlignment="Stretch" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center" Height="Auto" Width="Auto" Grid.Column="1" Margin="4,0,8,0" RenderTransformOrigin="0.5,0.5">
                <ContentPresenter.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform/>
                        <SkewTransform/>
                        <RotateTransform/>
                        <TranslateTransform/>
                    </TransformGroup>
                </ContentPresenter.RenderTransform>
            </ContentPresenter>
            <Image x:Name="image" Source="/MC-go;component/Resources/Images/cmdsearch.png" Stretch="None" HorizontalAlignment="Right" VerticalAlignment="Center" RenderTransformOrigin="0.5,0.5">
                <Image.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform/>
                        <SkewTransform/>
                        <RotateTransform/>
                        <TranslateTransform/>
                    </TransformGroup>
                </Image.RenderTransform>
            </Image>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsFocused" Value="True"/>
            <Trigger Property="IsDefaulted" Value="True"/>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Visibility" TargetName="border" Value="Visible"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Visibility" TargetName="border" Value="Visible"/>
                <Setter Property="RenderTransform" TargetName="contentPresenter">
                    <Setter.Value>
                        <TransformGroup>
                            <ScaleTransform/>
                            <SkewTransform/>
                            <RotateTransform/>
                            <TranslateTransform Y="1"/>
                        </TransformGroup>
                    </Setter.Value>
                </Setter>
                <Setter Property="RenderTransform" TargetName="image">
                    <Setter.Value>
                        <TransformGroup>
                            <ScaleTransform/>
                            <SkewTransform/>
                            <RotateTransform/>
                            <TranslateTransform Y="1"/>
                        </TransformGroup>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource enabletextcolor}"/>
                <Setter Property="Source" TargetName="image" Value="/MC-go;component/Resources/Images/cmdsearch2.png"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>


    <ControlTemplate x:Key="btnmexport" TargetType="{x:Type Button}">
        <Grid Background="#00000000">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="22"/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <Border x:Name="border"  BorderThickness="1" CornerRadius="2" Grid.ColumnSpan="2" Visibility="Hidden" BorderBrush="{DynamicResource custombordercolor}" Height="Auto" Background="{DynamicResource btnmenubgcolor}">
                <Border  BorderThickness="0,1,0,0" CornerRadius="1" Visibility="Visible" Height="Auto" Background="{x:Null}" BorderBrush="White"/>
            </Border>
            <ContentPresenter x:Name="contentPresenter" HorizontalAlignment="Stretch" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center" Height="Auto" Width="Auto" Grid.Column="1" Margin="4,0,8,0" RenderTransformOrigin="0.5,0.5">
                <ContentPresenter.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform/>
                        <SkewTransform/>
                        <RotateTransform/>
                        <TranslateTransform/>
                    </TransformGroup>
                </ContentPresenter.RenderTransform>
            </ContentPresenter>
            <Image x:Name="image" Source="/MC-go;component/Resources/Images/export.png" Stretch="None" HorizontalAlignment="Right" VerticalAlignment="Center" RenderTransformOrigin="0.5,0.5">
                <Image.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform/>
                        <SkewTransform/>
                        <RotateTransform/>
                        <TranslateTransform/>
                    </TransformGroup>
                </Image.RenderTransform>
            </Image>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsFocused" Value="True"/>
            <Trigger Property="IsDefaulted" Value="True"/>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Visibility" TargetName="border" Value="Visible"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Visibility" TargetName="border" Value="Visible"/>
                <Setter Property="RenderTransform" TargetName="contentPresenter">
                    <Setter.Value>
                        <TransformGroup>
                            <ScaleTransform/>
                            <SkewTransform/>
                            <RotateTransform/>
                            <TranslateTransform Y="1"/>
                        </TransformGroup>
                    </Setter.Value>
                </Setter>
                <Setter Property="RenderTransform" TargetName="image">
                    <Setter.Value>
                        <TransformGroup>
                            <ScaleTransform/>
                            <SkewTransform/>
                            <RotateTransform/>
                            <TranslateTransform Y="1"/>
                        </TransformGroup>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource enabletextcolor}"/>
                <Setter Property="Source" TargetName="image" Value="/MC-go;component/Resources/Images/export2.png"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>


    <Style x:Key="btn_menubuttonitem" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Background="#00000000">
                        <Border x:Name="border" Grid.ColumnSpan="1" Visibility="Collapsed" Background="#FF0E79BF" />
                        <Border x:Name="enablefalse" Grid.ColumnSpan="1" Visibility="Collapsed" Background="{DynamicResource menulistbgcolor}" />
                        <ContentPresenter RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="5,0,10,0"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsCancel" Value="False"/>
                        <Trigger Property="IsFocused" Value="True"/>
                        <Trigger Property="IsDefaulted" Value="True"/>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="#FFFFFFFF"/>
                            <Setter Property="Visibility" TargetName="border" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource enabletextcolor}"/>
                            <Setter Property="Visibility" TargetName="enablefalse" Value="Visible"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="False"/>
                                <Condition Property="IsMouseOver" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Foreground" Value="{DynamicResource enabletextcolor}"/>
                            <Setter Property="Visibility" TargetName="border" Value="Collapsed"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="MinWidth" Value="80"/>
        <Setter Property="Height" Value="24"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Margin" Value="-4"/>
    </Style>

    
    <!--SplitButton Style-->

    <Style x:Key="btnSplitRefreshButtonlist" TargetType="{x:Type bc:SplitButton}">
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type bc:SplitButton}">
                    <Grid>
                        <Button HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Command="{TemplateBinding Command}" CommandParameter="{TemplateBinding CommandParameter}" Style="{DynamicResource btnSplitRefreshbuttonbtnlisting}">
                            <ContentPresenter x:Name="cp" Margin="4,0,20,0" />
                        </Button>
                        <bc:MenuButton x:Name="mb" IsDropDownOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}}" Command="{TemplateBinding Command}" HorizontalAlignment="Right" VerticalAlignment="Stretch" Padding="4,0" BorderBrush="DarkGray" BorderThickness="1,0,0,0" ItemsSource="{Binding Items, Mode=OneWay, RelativeSource={RelativeSource Mode=TemplatedParent}}" Style="{DynamicResource MenuButton}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True"/>
                        <Trigger Property="ShowOptions" Value="False">
                            <Setter TargetName="cp" Property="Margin" Value="6,0,0,0" />
                            <Setter TargetName="mb" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="MinWidth" Value="80"/>
        <Setter Property="Height" Value="26"/>
    </Style>

    <Style x:Key="btnSplitButtonlist" TargetType="{x:Type bc:SplitButton}">
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type bc:SplitButton}">
                    <Grid>
                        <Button HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Command="{TemplateBinding Command}" CommandParameter="{TemplateBinding CommandParameter}" Style="{DynamicResource btnSplitbuttonbtnlisting}">
                            <ContentPresenter x:Name="cp" Margin="4,0,20,0" />
                        </Button>
                        <bc:MenuButton x:Name="mb" IsDropDownOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}}" Command="{TemplateBinding Command}" HorizontalAlignment="Right" VerticalAlignment="Stretch" Padding="4,0" BorderBrush="DarkGray" BorderThickness="1,0,0,0" ItemsSource="{Binding Items, Mode=OneWay, RelativeSource={RelativeSource Mode=TemplatedParent}}" Style="{DynamicResource MenuButton}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True"/>
                        <Trigger Property="ShowOptions" Value="False">
                            <Setter TargetName="cp" Property="Margin" Value="6,0,0,0" />
                            <Setter TargetName="mb" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="MinWidth" Value="80"/>
        <Setter Property="Height" Value="26"/>
    </Style>
    <Style x:Key="btnSplitButtontext" TargetType="{x:Type bc:SplitButton}">
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type bc:SplitButton}">
                    <Grid>
                        <Button HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Command="{TemplateBinding Command}" CommandParameter="{TemplateBinding CommandParameter}" Style="{DynamicResource splitsubbtn}">
                            <ContentPresenter x:Name="cp" Margin="4,0,20,0" />
                        </Button>
                        <bc:MenuButton x:Name="mb" IsDropDownOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}}" Command="{TemplateBinding Command}" HorizontalAlignment="Right" VerticalAlignment="Stretch" Padding="4,0" BorderBrush="DarkGray" BorderThickness="1,0,0,0" ItemsSource="{Binding Items, Mode=OneWay, RelativeSource={RelativeSource Mode=TemplatedParent}}" Style="{DynamicResource MenuButton}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True"/>
                        <Trigger Property="ShowOptions" Value="False">
                            <Setter TargetName="cp" Property="Margin" Value="6,0,0,0" />
                            <Setter TargetName="mb" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="MinWidth" Value="80"/>
        <Setter Property="Height" Value="26"/>
    </Style>

    <Style x:Key="btn_imglistingsplitbutton" TargetType="{x:Type bc:SplitButton}">
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type bc:SplitButton}">
                    <Grid SnapsToDevicePixels="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" MinWidth="22.5"/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <Button HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Command="{TemplateBinding Command}" CommandParameter="{TemplateBinding CommandParameter}" Style="{DynamicResource btnSplitbutton}" Grid.ColumnSpan="2">
                            <ContentPresenter x:Name="cp" Margin="26,0,16,0" />
                        </Button>
                        <bc:MenuButton x:Name="mb" IsDropDownOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}}" Command="{TemplateBinding Command}" HorizontalAlignment="Right" VerticalAlignment="Stretch" Padding="4,0" BorderBrush="DarkGray" BorderThickness="1,0,0,0" ItemsSource="{Binding Items, Mode=OneWay, RelativeSource={RelativeSource Mode=TemplatedParent}}" Style="{DynamicResource MenuButton}" Grid.Column="1" />
                        <Image x:Name="image" Source="/MC-go;component/Resources/Images/Listing.png" Stretch="None" HorizontalAlignment="Right" VerticalAlignment="Center"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Source" TargetName="image" Value="/MC-go;component/Resources/Images/Listing2.png"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True"/>
                        <Trigger Property="ShowOptions" Value="False">
                            <Setter TargetName="cp" Property="Margin" Value="6,0,0,0" />
                            <Setter TargetName="mb" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="MinWidth" Value="80"/>
        <Setter Property="Height" Value="23"/>
        <Setter Property="Margin" Value="0,3,5,3"/>
    </Style>

    <Style x:Key="btn_imgtextsplitbutton" TargetType="{x:Type bc:SplitButton}">
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type bc:SplitButton}">
                    <Grid SnapsToDevicePixels="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" MinWidth="22.5"/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <Button HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Command="{TemplateBinding Command}" CommandParameter="{TemplateBinding CommandParameter}" Style="{DynamicResource btnSplitbutton}" Grid.ColumnSpan="2">
                            <ContentPresenter x:Name="cp" Margin="26,0,16,0" />
                        </Button>
                        <bc:MenuButton x:Name="mb" IsDropDownOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}}" Command="{TemplateBinding Command}" HorizontalAlignment="Right" VerticalAlignment="Stretch" Padding="4,0" BorderBrush="DarkGray" BorderThickness="1,0,0,0" ItemsSource="{Binding Items, Mode=OneWay, RelativeSource={RelativeSource Mode=TemplatedParent}}" Style="{DynamicResource MenuButton}" Grid.Column="1" />
                        <Image x:Name="image" Source="/MC-go;component/Resources/Images/text.png" Stretch="None" HorizontalAlignment="Right" VerticalAlignment="Center"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Source" TargetName="image" Value="/MC-go;component/Resources/Images/text2.png"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True"/>
                        <Trigger Property="ShowOptions" Value="False">
                            <Setter TargetName="cp" Property="Margin" Value="6,0,0,0" />
                            <Setter TargetName="mb" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="MinWidth" Value="80"/>
        <Setter Property="Height" Value="23"/>
        <Setter Property="Margin" Value="0,3,5,3"/>
    </Style>

    <Style x:Key="btn_imgbutton" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="22"/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <Border x:Name="defaultbg" BorderBrush="{DynamicResource btnminbordercolor}" BorderThickness="1" CornerRadius="3" Grid.ColumnSpan="2">
                            <Border.Background>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="#FFFAFAFA" Offset="0"/>
                                    <GradientStop Color="#FFD7D7D7" Offset="1"/>
                                </LinearGradientBrush>
                            </Border.Background>
                        </Border>
                        <Border x:Name="mouseoverbg" BorderBrush="{DynamicResource btndefaultbordercolor}" BorderThickness="1" CornerRadius="3" Visibility="Hidden" Grid.ColumnSpan="2">
                            <Border.Background>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="#FFF1F8FC" Offset="0"/>
                                    <GradientStop Color="#FFBAD6EF" Offset="1"/>
                                </LinearGradientBrush>
                            </Border.Background>
                        </Border>
                        <Border x:Name="pressbg" BorderBrush="{DynamicResource btndefaultbordercolor}" BorderThickness="1" CornerRadius="3" Visibility="Hidden" Grid.ColumnSpan="2">
                            <Border.Background>
                                <LinearGradientBrush EndPoint="0.5,0.957" StartPoint="0.5,0">
                                    <GradientStop Color="#FFBDD4E9" Offset="0.18"/>
                                    <GradientStop Color="#FF9BB8D1"/>
                                </LinearGradientBrush>
                            </Border.Background>
                        </Border>
                        <Border x:Name="enable" BorderBrush="{DynamicResource enablefalsebordercolor}" BorderThickness="1" CornerRadius="3" Visibility="Hidden" Grid.ColumnSpan="2">
                            <Border.Background>
                                <LinearGradientBrush EndPoint="0.5,0.957" StartPoint="0.5,0">
                                    <GradientStop Color="#FFE3E8F1" Offset="1"/>
                                    <GradientStop Color="#FFEDEFF2"/>
                                </LinearGradientBrush>
                            </Border.Background>
                        </Border>
                        <ContentPresenter HorizontalAlignment="Left" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Grid.Column="1" Margin="5,0,10,0" Content="{TemplateBinding Tag}"/>
                        <Grid Width="18" Height="16" RenderOptions.BitmapScalingMode="NearestNeighbor" ClipToBounds="True" HorizontalAlignment="Right" >
                            <ContentPresenter x:Name="contentPresenter" Grid.ColumnSpan="1" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Width="Auto" Height="Auto"/>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="BorderBrush" TargetName="defaultbg" Value="{DynamicResource textboxfocusebordercolor}"/>
                        </Trigger>
                        <Trigger Property="IsDefaulted" Value="True"/>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Visibility" TargetName="defaultbg" Value="Hidden"/>
                            <Setter Property="Visibility" TargetName="mouseoverbg" Value="Visible"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="IsFocused" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Visibility" TargetName="mouseoverbg" Value="Visible"/>
                            <Setter Property="Visibility" TargetName="defaultbg" Value="Hidden"/>
                            <Setter Property="BorderBrush" TargetName="mouseoverbg" Value="{DynamicResource textboxfocusebordercolor}"/>
                        </MultiTrigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Visibility" TargetName="pressbg" Value="Visible"/>
                            <Setter Property="Visibility" TargetName="defaultbg" Value="Hidden"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsFocused" Value="True"/>
                                <Condition Property="IsPressed" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Visibility" TargetName="pressbg" Value="Visible"/>
                            <Setter Property="Visibility" TargetName="defaultbg" Value="Hidden"/>
                            <Setter Property="BorderBrush" TargetName="pressbg" Value="{DynamicResource highlightedbgcolor}"/>
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource enabletextcolor}"/>
                            <Setter Property="Visibility" TargetName="enable" Value="Visible"/>
                            <Setter Property="Margin" TargetName="contentPresenter" Value="0,-18,0,0"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="MinWidth" Value="47"/>
        <Setter Property="Height" Value="23"/>
        <Setter Property="Margin" Value="0,3,5,3"/>
    </Style>

    <Style x:Key="splitsubbtn" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
        <Setter Property="Background" Value="{StaticResource ButtonNormalBackground}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ButtonNormalBorder}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Background="#00000000">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="22"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Border x:Name="border"  BorderThickness="1" CornerRadius="2" Grid.ColumnSpan="2" Visibility="Hidden" BorderBrush="{DynamicResource custombordercolor}" Height="Auto" Background="{DynamicResource btnmenubgcolor}">
                            <Border  BorderThickness="0,1,0,0" CornerRadius="1" Visibility="Visible" Height="Auto" Background="{x:Null}" BorderBrush="White"/>
                        </Border>
                        <ContentPresenter x:Name="contentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="0,1" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RenderTransformOrigin="0.5,0.5" Grid.ColumnSpan="1" Grid.Column="1">
                            <ContentPresenter.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform/>
                                    <SkewTransform/>
                                    <RotateTransform/>
                                    <TranslateTransform/>
                                </TransformGroup>
                            </ContentPresenter.RenderTransform>
                        </ContentPresenter>
                        <Image x:Name="image" Source="/MC-go;component/Resources/Images/text.png" Stretch="None" HorizontalAlignment="Right" VerticalAlignment="Center" RenderTransformOrigin="0.5,0.5">
                            <Image.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform/>
                                    <SkewTransform/>
                                    <RotateTransform/>
                                    <TranslateTransform/>
                                </TransformGroup>
                            </Image.RenderTransform>
                        </Image>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True"/>
                        <Trigger Property="IsDefaulted" Value="True"/>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Visibility" TargetName="border" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Visibility" TargetName="border" Value="Visible"/>
                            <Setter Property="RenderTransform" TargetName="contentPresenter">
                                <Setter.Value>
                                    <TransformGroup>
                                        <ScaleTransform/>
                                        <SkewTransform/>
                                        <RotateTransform/>
                                        <TranslateTransform Y="1"/>
                                    </TransformGroup>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="RenderTransform" TargetName="image">
                                <Setter.Value>
                                    <TransformGroup>
                                        <ScaleTransform/>
                                        <SkewTransform/>
                                        <RotateTransform/>
                                        <TranslateTransform Y="1"/>
                                    </TransformGroup>
                                </Setter.Value>
                            </Setter>
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource enabletextcolor}"/>
                            <Setter Property="Source" TargetName="image" Value="/MC-go;component/Resources/Images/text2.png"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="btnSplitRefreshbuttonbtnlisting" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
        <Setter Property="Background" Value="{StaticResource ButtonNormalBackground}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ButtonNormalBorder}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Background="#00000000">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="22"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Border x:Name="border"  BorderThickness="1" CornerRadius="2" Grid.ColumnSpan="2" Visibility="Hidden" BorderBrush="{DynamicResource custombordercolor}" Height="Auto" Background="{DynamicResource btnmenubgcolor}">
                            <Border  BorderThickness="0,1,0,0" CornerRadius="1" Visibility="Visible" Height="Auto" Background="{x:Null}" BorderBrush="White"/>
                        </Border>
                        <ContentPresenter x:Name="contentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="0,1" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RenderTransformOrigin="0.5,0.5" Grid.ColumnSpan="1" Grid.Column="1">
                            <ContentPresenter.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform/>
                                    <SkewTransform/>
                                    <RotateTransform/>
                                    <TranslateTransform/>
                                </TransformGroup>
                            </ContentPresenter.RenderTransform>
                        </ContentPresenter>
                        <gif:GifImage Source="/MC-go;component/Resources/Images/loading.gif" Stretch="None" HorizontalAlignment="Right" 
                                      VerticalAlignment="Center" RenderTransformOrigin="0.5,0.5"
                                      
                                      Visibility ="{Binding TerminalCollection.ShowRefreshImage,Source={x:Static viewModel:ViewModelLocator.Instance}}"
                                      />
                        <Image x:Name="image" Visibility="{Binding TerminalCollection.ShowImage,Source={x:Static viewModel:ViewModelLocator.Instance}}" Source="/MC-go;component/Resources/Images/mrefresh.png" Stretch="None" HorizontalAlignment="Right" VerticalAlignment="Center" RenderTransformOrigin="0.5,0.5">
                            <Image.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform/>
                                    <SkewTransform/>
                                    <RotateTransform/>
                                    <TranslateTransform/>
                                </TransformGroup>
                            </Image.RenderTransform>
                        </Image>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True"/>
                        <Trigger Property="IsDefaulted" Value="True"/>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Visibility" TargetName="border" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Visibility" TargetName="border" Value="Visible"/>
                            <Setter Property="RenderTransform" TargetName="contentPresenter">
                                <Setter.Value>
                                    <TransformGroup>
                                        <ScaleTransform/>
                                        <SkewTransform/>
                                        <RotateTransform/>
                                        <TranslateTransform Y="1"/>
                                    </TransformGroup>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="RenderTransform" TargetName="image">
                                <Setter.Value>
                                    <TransformGroup>
                                        <ScaleTransform/>
                                        <SkewTransform/>
                                        <RotateTransform/>
                                        <TranslateTransform Y="1"/>
                                    </TransformGroup>
                                </Setter.Value>
                            </Setter>
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource enabletextcolor}"/>
                            <Setter Property="Source" TargetName="image" Value="/MC-go;component/Resources/Images/mrefresh2.png"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="btnSplitbuttonbtnlisting" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
        <Setter Property="Background" Value="{StaticResource ButtonNormalBackground}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ButtonNormalBorder}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Background="#00000000">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="22"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Border x:Name="border"  BorderThickness="1" CornerRadius="2" Grid.ColumnSpan="2" Visibility="Hidden" BorderBrush="{DynamicResource custombordercolor}" Height="Auto" Background="{DynamicResource btnmenubgcolor}">
                            <Border  BorderThickness="0,1,0,0" CornerRadius="1" Visibility="Visible" Height="Auto" Background="{x:Null}" BorderBrush="White"/>
                        </Border>
                        <ContentPresenter x:Name="contentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="0,1" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RenderTransformOrigin="0.5,0.5" Grid.ColumnSpan="1" Grid.Column="1">
                            <ContentPresenter.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform/>
                                    <SkewTransform/>
                                    <RotateTransform/>
                                    <TranslateTransform/>
                                </TransformGroup>
                            </ContentPresenter.RenderTransform>
                        </ContentPresenter>
                        <Image x:Name="image" Source="/MC-go;component/Resources/Images/Listing.png" Stretch="None" HorizontalAlignment="Right" VerticalAlignment="Center" RenderTransformOrigin="0.5,0.5">
                            <Image.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform/>
                                    <SkewTransform/>
                                    <RotateTransform/>
                                    <TranslateTransform/>
                                </TransformGroup>
                            </Image.RenderTransform>
                        </Image>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True"/>
                        <Trigger Property="IsDefaulted" Value="True"/>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Visibility" TargetName="border" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Visibility" TargetName="border" Value="Visible"/>
                            <Setter Property="RenderTransform" TargetName="contentPresenter">
                                <Setter.Value>
                                    <TransformGroup>
                                        <ScaleTransform/>
                                        <SkewTransform/>
                                        <RotateTransform/>
                                        <TranslateTransform Y="1"/>
                                    </TransformGroup>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="RenderTransform" TargetName="image">
                                <Setter.Value>
                                    <TransformGroup>
                                        <ScaleTransform/>
                                        <SkewTransform/>
                                        <RotateTransform/>
                                        <TranslateTransform Y="1"/>
                                    </TransformGroup>
                                </Setter.Value>
                            </Setter>
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource enabletextcolor}"/>
                            <Setter Property="Source" TargetName="image" Value="/MC-go;component/Resources/Images/Listing2.png"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="btnSplitbutton" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
        <Setter Property="Background" Value="{StaticResource ButtonNormalBackground}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ButtonNormalBorder}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Background="#00000000">
                        <Border x:Name="defaultbg" BorderBrush="{DynamicResource btnminbordercolor}" BorderThickness="1" CornerRadius="3">
                            <Border.Background>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="#FFFAFAFA" Offset="0"/>
                                    <GradientStop Color="#FFD7D7D7" Offset="1"/>
                                </LinearGradientBrush>
                            </Border.Background>
                        </Border>
                        <Border x:Name="mouseoverbg" BorderBrush="{DynamicResource btndefaultbordercolor}" BorderThickness="1" CornerRadius="3" Visibility="Hidden">
                            <Border.Background>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="#FFF1F8FC" Offset="0"/>
                                    <GradientStop Color="#FFBAD6EF" Offset="1"/>
                                </LinearGradientBrush>
                            </Border.Background>
                        </Border>
                        <Border x:Name="pressbg" BorderBrush="{DynamicResource btndefaultbordercolor}" BorderThickness="1" CornerRadius="3" Visibility="Hidden">
                            <Border.Background>
                                <LinearGradientBrush EndPoint="0.5,0.957" StartPoint="0.5,0">
                                    <GradientStop Color="#FFBDD4E9" Offset="0.18"/>
                                    <GradientStop Color="#FF9BB8D1"/>
                                </LinearGradientBrush>
                            </Border.Background>
                        </Border>
                        <Border x:Name="enable" BorderBrush="{DynamicResource enablefalsebordercolor}" BorderThickness="1" CornerRadius="3" Visibility="Hidden">
                            <Border.Background>
                                <LinearGradientBrush EndPoint="0.5,0.957" StartPoint="0.5,0">
                                    <GradientStop Color="#FFE3E8F1" Offset="1"/>
                                    <GradientStop Color="#FFEDEFF2"/>
                                </LinearGradientBrush>
                            </Border.Background>
                        </Border>
                        <ContentPresenter x:Name="contentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="0,1" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RenderTransformOrigin="0.5,0.5" Grid.ColumnSpan="1" Grid.Column="1">
                            <ContentPresenter.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform/>
                                    <SkewTransform/>
                                    <RotateTransform/>
                                    <TranslateTransform/>
                                </TransformGroup>
                            </ContentPresenter.RenderTransform>
                        </ContentPresenter>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="BorderBrush" TargetName="defaultbg" Value="{DynamicResource textboxfocusebordercolor}"/>
                        </Trigger>
                        <Trigger Property="IsDefaulted" Value="True"/>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Visibility" TargetName="mouseoverbg" Value="Visible"/>
                            <Setter Property="Visibility" TargetName="defaultbg" Value="Hidden"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Visibility" TargetName="pressbg" Value="Visible"/>
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource enabletextcolor}"/>
                            <Setter Property="Visibility" TargetName="enable" Value="Visible"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="btnSplitButtoncameraconfig" TargetType="{x:Type bc:SplitButton}">
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type bc:SplitButton}">
                    <Grid>
                        <Button HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Command="{TemplateBinding Command}" CommandParameter="{TemplateBinding CommandParameter}" Style="{DynamicResource btnSplitbuttonbtncameraconfig}">
                            <ContentPresenter x:Name="cp" Margin="4,0,20,0" />
                        </Button>
                        <bc:MenuButton x:Name="mb" IsDropDownOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}}" Command="{TemplateBinding Command}" HorizontalAlignment="Right" VerticalAlignment="Stretch" Padding="4,0" BorderBrush="DarkGray" BorderThickness="1,0,0,0" ItemsSource="{Binding Items, Mode=OneWay, RelativeSource={RelativeSource Mode=TemplatedParent}}" Style="{DynamicResource MenuButton}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True"/>
                        <Trigger Property="ShowOptions" Value="False">
                            <Setter TargetName="cp" Property="Margin" Value="6,0,0,0" />
                            <Setter TargetName="mb" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="MinWidth" Value="80"/>
        <Setter Property="Height" Value="26"/>
    </Style>

    <Style x:Key="btn_imgsnapshotconifgsplitbutton" TargetType="{x:Type bc:SplitButton}">
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type bc:SplitButton}">
                    <Grid SnapsToDevicePixels="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" MinWidth="28"/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <Button HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Command="{TemplateBinding Command}" CommandParameter="{TemplateBinding CommandParameter}" Style="{DynamicResource btnSplitbutton}" Grid.ColumnSpan="2">
                            <ContentPresenter x:Name="cp" Margin="30,0,16,0" />
                        </Button>
                        <bc:MenuButton x:Name="mb" IsDropDownOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}}" Command="{TemplateBinding Command}" HorizontalAlignment="Right" VerticalAlignment="Stretch" Padding="4,0" BorderBrush="DarkGray" BorderThickness="1,0,0,0" ItemsSource="{Binding Items, Mode=OneWay, RelativeSource={RelativeSource Mode=TemplatedParent}}" Style="{DynamicResource MenuButton}" Grid.Column="1" />
                        <Grid Width="21" Height="18" HorizontalAlignment="Right" ClipToBounds="True">
                            <Image Margin="0" Source="/MC-go;component/Resources/Images/lsnapshotconfig.png" Stretch="None"/>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True"/>
                        <Trigger Property="ShowOptions" Value="False">
                            <Setter TargetName="cp" Property="Margin" Value="6,0,0,0" />
                            <Setter TargetName="mb" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="MinWidth" Value="80"/>
        <Setter Property="Height" Value="23"/>
        <Setter Property="Margin" Value="0,3,5,3"/>
    </Style>

    <Style x:Key="btnSplitButtonviewlog" TargetType="{x:Type bc:SplitButton}">
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type bc:SplitButton}">
                    <Grid SnapsToDevicePixels="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" MinWidth="22.5"/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <Button HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Command="{TemplateBinding Command}" CommandParameter="{TemplateBinding CommandParameter}" Style="{DynamicResource btnSplitbutton}" Grid.ColumnSpan="2">
                            <ContentPresenter x:Name="cp" Margin="26,0,16,0" />
                        </Button>
                        <bc:MenuButton x:Name="mb" IsDropDownOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}}" Command="{TemplateBinding Command}" HorizontalAlignment="Right" VerticalAlignment="Stretch" Padding="4,0" BorderBrush="DarkGray" BorderThickness="1,0,0,0" ItemsSource="{Binding Items, Mode=OneWay, RelativeSource={RelativeSource Mode=TemplatedParent}}" Style="{DynamicResource MenuButton}" Grid.Column="1" />
                        <Image x:Name="image" Source="/MC-go;component/Resources/Images/search.png" Stretch="None" HorizontalAlignment="Right" VerticalAlignment="Center"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Source" TargetName="image" Value="/MC-go;component/Resources/Images/search2.png"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True"/>
                        <Trigger Property="ShowOptions" Value="False">
                            <Setter TargetName="cp" Property="Margin" Value="6,0,0,0" />
                            <Setter TargetName="mb" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="MinWidth" Value="80"/>
        <Setter Property="Height" Value="23"/>
        <Setter Property="Margin" Value="0,3,5,3"/>
    </Style>


    <Style x:Key="FlatButtonFocusVisual">
        <Setter
            Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MetroButton" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FlatButtonFocusVisual}"/>
        <Setter Property="Background" Value="#EEEEEEEE"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="10 5"/>
        <Setter Property="FontSize" Value="14" />
        <Setter Property="BorderThickness" Value="2" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border
                                x:Name="Border"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}" />

                        <ContentPresenter
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                Margin="{TemplateBinding Padding}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                RecognizesAccessKey="True" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="OpacityMask" Value="#AA888888"/>
                            <Setter Property="Margin" Value="2 1" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderThickness" Value="0"/>
                            <!--<Setter Property="Background" Value="DimGray"/>-->
                            <Setter Property="Foreground" Value="White"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="#ADADAD"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!-- Flat Button Style -->
    <Color x:Key="DefaultColor" A="255" R="240" G ="240" B="240"/>
    <Color x:Key="HighlightColor" A="255" R="229" G ="229" B="229"/>
    <Color x:Key="PressedColor" A="255" R="215" G ="215" B="215"/>

    <SolidColorBrush x:Key="DefaultBrush" Color="{StaticResource DefaultColor}" />
    <SolidColorBrush x:Key="HighlightBrush" Color="{StaticResource HighlightColor}" />
    <SolidColorBrush x:Key="PressedBrush" Color="{StaticResource PressedColor}" />

    <Style TargetType="Button" x:Key="FlatButtonStyle">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Background" Value="{StaticResource DefaultBrush}" />
        <Setter Property="BorderThickness" Value="2" />
        <Setter Property="BorderBrush" Value="Black" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border BorderThickness="{TemplateBinding BorderThickness}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    Background="{TemplateBinding Background}"
                    Padding="{TemplateBinding Padding}"
                    CornerRadius="0">
                        <ContentControl Content="{TemplateBinding Content}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource HighlightBrush}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{StaticResource PressedBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>


    <!-- End Flat Button Style -->

</ResourceDictionary>